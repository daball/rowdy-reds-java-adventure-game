<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>60</x>
      <y>0</y>
      <w>300</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>Direction
--
_+north: string = "n"_
_+south: string = "s"_
_+east: string = "e"_
_+west: string = "w"_
_+n: string = "n"_
_+s: string = "s"_
_+e: string = "e"_
_+w: string = "w"_
--
_+getDirection(direction: string): string_
_+oppositeDirection(direction: string): string_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>30</y>
      <w>210</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>RoomDirection
--
+description: string = ""
+jumpTo: string = ""
--
+serialize(): string
+unserialize(data: string): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>110</x>
      <y>230</y>
      <w>400</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Room
--
+name: string = ""
+description: string = ""
+imageUrl: string = ""
+spawn: bool = false
+directions: array[string=&gt;RoomDirections]
--
+directions["n"]: RoomDirection = new RoomDirection()
+directions["s"]: RoomDirection = new RoomDirection()
+directions["e"]: RoomDirection = new RoomDirection()
+directions["w"]: RoomDirection = new RoomDirection()
--
+serialize(): string
+unserialize(data: string): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>470</y>
      <w>270</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Map
--
+rooms: Room[]
--
+addRoom(room: Room): void
+getRoom(roomName: string): Room
+getSpawnPoint(): string
--
+serialize(): string
+unserialize(data: string): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>110</x>
      <y>620</y>
      <w>840</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>MapBuilder
--
-map: Map = new Map()
--
+createRoom(roomName: string): MapBuilder = this
+setRoomDescription(roomName: string, roomDescription: string): MapBuilder = this
+setRoomImageUrl(roomName: string, roomImageUrl: string): MapBuilder = this
+setRoomDirectionDescription(roomName: string, roomDirection: string, roomDirectionDescription: string): MapBuilder = this
+connectRooms(roomName1: string, room1Direction: string, roomName2: string): MapBuilder = this
+setSpawnPoint(roomName: string): MapBuilder = this
+getMap(): Map</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>810</y>
      <w>180</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>SampleMap
--
_+buildSampleMap(): Map_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>270</x>
      <y>880</y>
      <w>540</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>GameState
--
+map: Map = SampleMap::buildSampleMap()
+avatarLocation: string = this.map.getSpawnPoint()
+consoleHistory: string = "Game started.\n" + this.inspectRoom()
+moves: int = 0
+isExiting: bool = false
--
+GameState(): GameState
+GameState($data): GameState
--
+resetGameState(): void
+getAvatarRoom(): Room
+navigate(direction: string): string
+inspectRoom(): string
+addCommandToHistory(commandInput: string, commandOutput: string): void
--
+serialize(): string
+unserialize(data: string): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1170</y>
      <w>510</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
CommandHandlerInterface
--
+validateCommand(gameState: GameState, commandLine: string): bool
+executeCommand(gameState: GameState, commandLine: string): string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1280</y>
      <w>500</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>NavigateCommandHandler
--
+validateCommand(gameState: GameState, commandLine: string): bool
+executeCommand(gameState: GameState, commandLine: string): string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1360</y>
      <w>500</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>HelpCommandHandler
--
+validateCommand(gameState: GameState, commandLine: string): bool
+executeCommand(gameState: GameState, commandLine: string): string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1440</y>
      <w>500</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ResetCommandHandler
--
+validateCommand(gameState: GameState, commandLine: string): bool
+executeCommand(gameState: GameState, commandLine: string): string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1520</y>
      <w>500</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ExitCommandHandler
--
+validateCommand(gameState: GameState, commandLine: string): bool
+executeCommand(gameState: GameState, commandLine: string): string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1610</y>
      <w>500</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>CommandProcessor
--
+commandHandlers: CommandHandlerInterface[] = [
  new NavigateCommandHandler(),
  new HelpCommandHandler(),
  new ResetCommandHandler(),
  new ExitCommandHandler()
]
--
CommandProcessor(gameState: GameState)
--
+dispatchCommand(gameState: GameState, commandLine: string): string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>1810</y>
      <w>590</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>GameEngine
--
+gameState: GameState = new GameState()
+commandProcessor: CommandProcessor = new CommandProcessor(this.gameState)
--
+createSession()
+restoreSession()
+saveSession()</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
